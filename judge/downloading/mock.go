// Code generated by MockGen. DO NOT EDIT.
// Source: judge/downloading/interface.go

// Package downloading is a generated GoMock package.
package downloading

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
	http "net/http"
	os "os"
	reflect "reflect"
)

// MockFileDownloaderDependencies is a mock of FileDownloaderDependencies interface
type MockFileDownloaderDependencies struct {
	ctrl     *gomock.Controller
	recorder *MockFileDownloaderDependenciesMockRecorder
}

// MockFileDownloaderDependenciesMockRecorder is the mock recorder for MockFileDownloaderDependencies
type MockFileDownloaderDependenciesMockRecorder struct {
	mock *MockFileDownloaderDependencies
}

// NewMockFileDownloaderDependencies creates a new mock instance
func NewMockFileDownloaderDependencies(ctrl *gomock.Controller) *MockFileDownloaderDependencies {
	mock := &MockFileDownloaderDependencies{ctrl: ctrl}
	mock.recorder = &MockFileDownloaderDependenciesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFileDownloaderDependencies) EXPECT() *MockFileDownloaderDependenciesMockRecorder {
	return m.recorder
}

// NewHTTPRequest mocks base method
func (m *MockFileDownloaderDependencies) NewHTTPRequest(method, url string, body io.Reader) (*http.Request, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewHTTPRequest", method, url, body)
	ret0, _ := ret[0].(*http.Request)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewHTTPRequest indicates an expected call of NewHTTPRequest
func (mr *MockFileDownloaderDependenciesMockRecorder) NewHTTPRequest(method, url, body interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewHTTPRequest", reflect.TypeOf((*MockFileDownloaderDependencies)(nil).NewHTTPRequest), method, url, body)
}

// DoRequest mocks base method
func (m *MockFileDownloaderDependencies) DoRequest(req *http.Request) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoRequest", req)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DoRequest indicates an expected call of DoRequest
func (mr *MockFileDownloaderDependenciesMockRecorder) DoRequest(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoRequest", reflect.TypeOf((*MockFileDownloaderDependencies)(nil).DoRequest), req)
}

// CreateFile mocks base method
func (m *MockFileDownloaderDependencies) CreateFile(relativePath string) (*os.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFile", relativePath)
	ret0, _ := ret[0].(*os.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFile indicates an expected call of CreateFile
func (mr *MockFileDownloaderDependenciesMockRecorder) CreateFile(relativePath interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFile", reflect.TypeOf((*MockFileDownloaderDependencies)(nil).CreateFile), relativePath)
}
